pipeline {
    agent any

    tools {
        maven "MAVEN_HOME"
    }

    stages {
        stage ('Get Latest Code') {
	        steps {
                echo 'Get Latest Code'
                checkout([$class: 'GitSCM', branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/mmukul/devsecops-training-lab.git']]])
	        }
	    }

        stage ('Build App') {
            steps {
                sh 'mvn clean package'
            }
        }

    /*...........................DAST................................*/
        stage ('DAST') {
            steps {
                sh '''
                IPADD=$(ip -f inet -o addr show ens33 | awk '{print $4}' | cut -d '/' -f 1)
                sh 'docker run --rm --name webgoat -p 8080:8080 -p 9090:9090 -d webgoat/webgoat
                docker run --user $(id -u):$(id -g) -v $(pwd):/zap/wrk/:rw --rm -t owasp/zap2docker-stable zap-baseline.py -t http://${IPADD}:8080/WebGoat/ -r reports/zap-baseline-scan.html || true
                '''
            }
        }
    }
}